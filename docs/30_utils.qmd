---
title: utils
tbl-colwidths: [25,10,10,45]
jupyter: 
    kernelspec: 
      name: "fm-ml"
      language: "python"
      display_name: "Python-fm-ml"
---

```{python}
#| echo: false
from finmetrika_ml.utils import *
from IPython.display import Markdown
```

Various utility functions for checking and defining compute engine, logging and creating the experimentation documentation.

## Reproducibility {.unnumbered}

Reproducibility is one of the most important aspects of proper project development and management, for ourselves, as well as for other people to whom we will share the project and possibly need to make decisions based on the results.

```{python}
#| echo: false
display(Markdown(generate_markdown_doc(set_all_seeds)))
```

We can set the seed for most of the libraries that we use in machine learning like: `numpy`, `torch`, `torch.cuda`, `mps` as well as for Python in general.

```{python}
set_all_seeds(seed=42)
```

If you are using `FLAGS` then simply replace the value of the seed for the data class defined for the reproducibility. For example, if my data class is called `seed` then I would use:

``` python
set_all_seeds(seed=FLAGS.seed)
```

## Computation engine {.unnumbered}

```{python}
#| echo: false
display(Markdown(generate_markdown_doc(check_device)))
```

We can use the function as follows, which if the argument `verbose` is `True` it will print out the compute device currently available.

```{python}
device = check_device()
```

```{python}
#| echo: false
display(Markdown(generate_markdown_doc(moveTo)))
```

## System information {.unnumbered}

```{python}
#| echo: false
display(Markdown(generate_markdown_doc(get_python_version)))
```

```{python}
#| echo: false
display(Markdown(generate_markdown_doc(get_package_version)))
```

## Creating experiment information document {.unnumbered}

```{python}
#| echo: false
display(Markdown(generate_markdown_doc(update_config)))
```

```{python}
#| echo: false
display(Markdown(generate_markdown_doc(create_experiment_descr_file)))
```

```{python}
#| echo: false
display(Markdown(generate_markdown_doc(add_runtime_experiment_info)))
```